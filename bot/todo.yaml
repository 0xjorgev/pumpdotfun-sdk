# TODO
- app 
  - Pagination:
    - Speed up: Add pagination to detect_dust_token_accounts function

- EC2:
  √ Deploy app in
    √√ Mini and check if it works
    # - Small and check if it works
  - Have a permanent IP address

- New endopints
  - Post: get burn and close quote
    √ Create openAPI specs
    √∫ Create pydantic classes
    - Create enpoint /associated_token_accounts/burn_and_close/quote
      - Will call burn_and_close_associated_token_account without keypair
      - WIll include 5% fees as a new instruction
        - Check lookuptables
      - Will return a Transaction.new_unsigned (create the Message) 
        - encode in base58 and return

  # - Post: send transaction (hablar con Jorge primero)
  #   - Create openAPI specs
  #   - Create pydantic classes
  #   - Create enpoint /associated_token_accounts/burn_and_close
  #     - Will receive the signed transaction in base 58 and decode it
  #     - Will send the transaction and return the signature.
  #     - The front will take care of confirming the txn.





- BUG: when a timeout occurs during subscription, the next step is
       BUY and should be unsubscribe to token.

- BUG: When token is too old, It should  hear again from redisdb
       Now is continuing the steps.



- Fees service:
  - Create a service that will subscribe to
  sniper pubkey and get any changes in its state
  and log it in redis.
    - Create a new index for this

- Scanner: 
  * will delete all tokens -> is_checked == False
  -> Work with black list and discard any token made by blacked developers

- Docker: run automatically
- Bash: apply command arguments to choose
  how to run the celebrimborg: Sniper, messaging
  - Send messsages when things goes wrong

- Replace prints with Logging with timestamp